* Basic example

  #+NAME: lsttest
  - item: First item (kCHF: 15, recurrence: 1, end-year: 2020)
    - modification of the first item (kCHF: 20)
    - another modification of the first item (other: 500)
      - modification of the modification (other: 299)
  - item: second item (kCHF: 50, recurrence: 4, end-year: 2026)
  - category (recurrence: 2, end-year: 2024)
    - item: a category item A (kCHF: 10)
    - item: a category item B (kCHF: 20)
    - item: a category item C (kCHF: 30)
      - a modification to category item C (kCHF: 25, recurrence: 3)
  
* Example with adding

  #+NAME: lsttestAdd
  - item: First item (kCHF: 100, recurrence: 1, end-year: 2020)
    - modification of the first item (kCHF: +20)
    - a new val for kCHF  for the first item (kCHF: 150)
      - a new modification of the value (kCHF: +30)
  - item: second item (kCHF: 50, recurrence: 4, end-year: 2026)
  - category (recurrence: 2, end-year: 2024)
    - item: a category item A (kCHF: 10)
    - item: a category item B (kCHF: 20)
    - item: a category item C (kCHF: 30)
      - a modification to category item C (kCHF: 25, recurrence: 3)
  

   #+BEGIN_SRC elisp :results output :var lname="lsttestAdd" :exports both
     (pp (org-listcruncher--parselist (save-excursion
					(goto-char (point-min))
					(unless (search-forward-regexp (concat  "^ *#\\\+NAME: .*" lname) nil t)
					  (error "No list of this name found: %s" lname))
					(forward-line 1)
					(org-list-to-lisp))
				      nil
				      nil))
   #+END_SRC

   #+RESULTS:
   #+begin_example
   ((("kCHF" "25")
     ("recurrence" "3")
     ("kCHF" "30")
     ("kCHF" "20")
     ("kCHF" "10")
     ("recurrence" "2")
     ("end-year" "2024")
     ("kCHF" "50")
     ("recurrence" "4")
     ("end-year" "2026")
     ("kCHF" "+30")
     ("kCHF" "150")
     ("kCHF" "+20")
     ("kCHF" "100")
     ("recurrence" "1")
     ("end-year" "2020"))
    ((("description" "First item ")
      ("kCHF" "+30")
      ("kCHF" "150")
      ("kCHF" "+20")
      ("kCHF" "100")
      ("recurrence" "1")
      ("end-year" "2020"))
     (("description" "second item ")
      ("kCHF" "50")
      ("recurrence" "4")
      ("end-year" "2026"))
     (("description" "a category item A ")
      ("kCHF" "10")
      ("recurrence" "2")
      ("end-year" "2024"))
     (("description" "a category item B ")
      ("kCHF" "20")
      ("recurrence" "2")
      ("end-year" "2024"))
     (("description" "a category item C ")
      ("kCHF" "25")
      ("recurrence" "3")
      ("kCHF" "30")
      ("recurrence" "2")
      ("end-year" "2024"))))
   #+end_example
  
