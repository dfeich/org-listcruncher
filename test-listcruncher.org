* Test 1

  #+NAME: ltot-test
  - item: First item (kCHF: 15, recur: 1, until: 2020)
    - modification of the first item (kCHF: 20)
    - another modification of the first item (other: 500)
      - modification of the modification (other: 299)
  - item: second item (kCHF: 50, recur: 4)
  - category (recur: 5)
    - item: a category item A (kCHF: 10)
    - item: a category item B (kCHF: 20)
    - item: a category item C (kCHF: 30)
      - a modification to category item C (kCHF: 25, recur: 3)


  #+BEGIN_SRC elisp :results output :var lname="ltot-test"
    (pp (org-listcruncher-parselist (save-excursion
				      (goto-char (point-min))
				      (unless (search-forward-regexp (concat  "#\\\+NAME: .*" lname) nil t)
					(error "No list of this name found: %s" lname))
				      (forward-line 1)
				      (org-list-to-lisp))
				    nil
				    nil))
  #+END_SRC

  #+RESULTS:
  #+begin_example
  ((("kCHF" "25")
    ("recur" "3")
    ("kCHF" "30")
    ("kCHF" "20")
    ("kCHF" "10")
    ("recur" "5")
    ("kCHF" "50")
    ("recur" "4")
    ("other" "299")
    ("other" "500")
    ("kCHF" "20")
    ("kCHF" "15")
    ("recur" "1")
    ("until" "2020"))
   ((("descr" "First item ")
     ("other" "299")
     ("other" "500")
     ("kCHF" "20")
     ("kCHF" "15")
     ("recur" "1")
     ("until" "2020"))
    (("descr" "second item ")
     ("kCHF" "50")
     ("recur" "4"))
    (("descr" "a category item A ")
     ("kCHF" "10")
     ("recur" "5"))
    (("descr" "a category item B ")
     ("kCHF" "20")
     ("recur" "5"))
    (("descr" "a category item C ")
     ("kCHF" "25")
     ("recur" "3")
     ("kCHF" "30")
     ("recur" "5"))))
  #+end_example


  Reference
  #+begin_example
  line: First item 
     varlst: ((other 299) (other 500) (kCHF 20) (kCHF 15) (recur 1) (until 2020))
  line: second item 
     varlst: ((kCHF 50) (recur 4))
  line: a category item A 
     varlst: ((kCHF 10) (recur 5))
  line: a category item B 
     varlst: ((kCHF 20) (recur 5))
  line: a category item C 
     varlst: ((kCHF 25) (recur 3) (kCHF 30) (recur 5))
  (("kCHF" "25")
   ("recur" "3")
   ("kCHF" "30")
   ("kCHF" "20")
   ("kCHF" "10")
   ("recur" "5")
   ("kCHF" "50")
   ("recur" "4")
   ("other" "299")
   ("other" "500")
   ("kCHF" "20")
   ("kCHF" "15")
   ("recur" "1")
   ("until" "2020"))
  #+end_example


